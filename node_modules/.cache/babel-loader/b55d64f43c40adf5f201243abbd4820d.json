{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matheus\\\\Desktop\\\\chat\\\\src\\\\Context\\\\GlobalContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalContext = /*#__PURE__*/React.createContext(null);\n\nconst MensagensProvider = ({\n  children\n}) => {\n  _s();\n\n  const [Mensagens, setMensagens] = useState([]);\n  const [UserAuth, setUserAuth] = useState(false);\n  const [UserInfo, setUserInfo] = useState([]);\n  const URL = 'ws://127.0.0.1:3333';\n  const [ws, setWs] = useState(new WebSocket(URL));\n  ws.binaryType = \"arraybuffer\";\n  useEffect(() => {\n    ws.onopen = () => {\n      console.log('websocket conectado');\n    };\n\n    ws.onmessage = e => {\n      console.log('onmessage', e.data);\n      const message = JSON.parse(e.data);\n      console.log(message);\n      setMensagens([message, ...Mensagens]);\n    };\n\n    return () => {\n      ws.onclose = () => {\n        console.log('webscoket desconectado');\n        setWs(new WebSocket(URL));\n      };\n    };\n  }, [ws.onmessage, ws.onopen, ws.onclose, Mensagens]);\n\n  const addMensagem = data => {\n    const timestamp = Date.now();\n    const fomartedtimestamp = new Intl.DateTimeFormat('pt-BR', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }).format(timestamp);\n    console.log(fomartedtimestamp);\n    const {\n      Name,\n      userID\n    } = UserInfo;\n    const newMessage = {\n      id: uuidv4(),\n      userName: Name,\n      userID: userID,\n      mensagem: 'teste',\n      timestamp: fomartedtimestamp\n    };\n    setMensagens([...Mensagens, newMessage]);\n    ws.send(JSON.stringify(newMessage));\n  };\n\n  const AuthRequest = response => {\n    console.log(response);\n    const {\n      profileObj\n    } = response;\n    const object = {\n      userID: profileObj.googleId,\n      Name: profileObj.name,\n      AvatarUrl: profileObj.imageUrl\n    };\n    setUserInfo(object);\n    setUserAuth(true);\n  };\n\n  const LogoutRequest = () => {\n    setUserAuth(false);\n    setUserInfo([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      Mensagens,\n      addMensagem,\n      UserAuth,\n      AuthRequest,\n      UserInfo,\n      LogoutRequest\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MensagensProvider, \"2mDq+aEDaJq0i5nD1zzPJiB6Jn8=\");\n\n_c = MensagensProvider;\nexport default MensagensProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MensagensProvider\");","map":{"version":3,"sources":["C:/Users/Matheus/Desktop/chat/src/Context/GlobalContext.js"],"names":["React","useEffect","useState","v4","uuidv4","GlobalContext","createContext","MensagensProvider","children","Mensagens","setMensagens","UserAuth","setUserAuth","UserInfo","setUserInfo","URL","ws","setWs","WebSocket","binaryType","onopen","console","log","onmessage","e","data","message","JSON","parse","onclose","addMensagem","timestamp","Date","now","fomartedtimestamp","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Name","userID","newMessage","id","userName","mensagem","send","stringify","AuthRequest","response","profileObj","object","googleId","name","AvatarUrl","imageUrl","LogoutRequest"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nexport const GlobalContext = React.createContext(null)\r\n\r\nconst MensagensProvider = ({ children }) => {\r\n    const [Mensagens, setMensagens] = useState([])\r\n    const [UserAuth, setUserAuth] = useState(false)\r\n    const [UserInfo, setUserInfo] = useState([])\r\n    const URL = 'ws://127.0.0.1:3333';\r\n    const [ws, setWs] = useState(new WebSocket(URL))\r\n    ws.binaryType = \"arraybuffer\";\r\n    useEffect(() =>{\r\n        ws.onopen = () =>{\r\n            console.log('websocket conectado')\r\n        }\r\n        ws.onmessage = (e) =>{\r\n            console.log('onmessage',e.data)\r\n            const message = JSON.parse(e.data);\r\n            console.log(message)\r\n            setMensagens([message, ...Mensagens])\r\n        }\r\n        return () => {\r\n            ws.onclose = () =>{\r\n                console.log('webscoket desconectado')\r\n                setWs( new WebSocket(URL));\r\n            }\r\n        }\r\n    },[ws.onmessage, ws.onopen, ws.onclose, Mensagens])\r\n    const addMensagem = (data) => {\r\n        const timestamp = Date.now()\r\n        const fomartedtimestamp = new Intl.DateTimeFormat('pt-BR', {year:'numeric', month: '2-digit', day: '2-digit', hour:'2-digit', minute:'2-digit', second:'2-digit'}).format(timestamp);\r\n        console.log(fomartedtimestamp)\r\n        const {Name, userID} = UserInfo\r\n        const newMessage = {\r\n            id: uuidv4(),\r\n            userName: Name,\r\n            userID: userID,\r\n            mensagem: 'teste',\r\n            timestamp: fomartedtimestamp\r\n        };\r\n        setMensagens([...Mensagens, newMessage ])\r\n        ws.send(JSON.stringify(newMessage))\r\n\r\n    }\r\n    const AuthRequest = (response) => {\r\n        console.log(response)\r\n        const { profileObj } = response\r\n        const object = {\r\n            userID:profileObj.googleId,\r\n            Name: profileObj.name,\r\n            AvatarUrl: profileObj.imageUrl,\r\n        }\r\n        setUserInfo(object)\r\n        setUserAuth(true)\r\n    }\r\n    const LogoutRequest = () =>{\r\n        setUserAuth(false)\r\n        setUserInfo([])\r\n    }\r\n    return (\r\n        <GlobalContext.Provider value={{ Mensagens, addMensagem, UserAuth, AuthRequest, UserInfo, LogoutRequest }} >\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\nexport default MensagensProvider;"]},"metadata":{},"sourceType":"module"}